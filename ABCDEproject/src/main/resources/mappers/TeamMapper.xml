<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.ABCDEproject.dao.TeamDAO">
	
	<insert id="makeTeam" parameterType="Team" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		insert into team
			(
				id, leader_id, team_description, team_name
				<if test="original_icon != null and team_icon != null">
					, original_icon,
					team_icon
				</if>
			)
		values
			(
				team_seq.nextval, #{leader_id}, #{team_description}, #{team_name}
				<if test="original_icon != null and team_icon != null">
					, #{original_icon},
					#{team_icon}
				</if>
			)
	</insert>
	<select id="getTeamListFilterID" parameterType="int" resultType="Team">
		select * from team where leader_id=#{userid}
	</select>
	<select id="teamList" parameterType="int" resultType="team">
		select * from team
		where
			leader_id = #{memberid}
	</select>
	<select id="getTeamLeader" parameterType="int" resultType="Team">
		select * from team where id=#{team_id}
	</select>
	<select id="getTeamMemberList" parameterType="int" resultType="TeamMember">
		select * from team_member where team_id=#{team_id}
	</select>
	<select id="selectTeam" parameterType="int" resultType="Team">
		select * from team
		where
			id = #{teamId}
	</select>
	<select id="getTeamMemberIdList" parameterType="int" resultType="int">
		select member_id from team_member
		where
			team_id = #{teamId}
	</select>
	<select id="getTeamMember" parameterType="List" resultType="Member">
		select * from Member
		WHERE id IN
		    <foreach item="item" collection="list" open="(" separator="," close=")">
		        #{item}
		    </foreach>
	</select>
	<delete id="deleteMember" parameterType="TeamMember">
		delete team_member
		where
			member_id = #{member_id} AND team_id = #{team_id}
	</delete>
	<insert id="inviteMember" parameterType="TeamInvite">
		insert into team_invite
		(
			id,
			team_id,
			addressee_id,
			answer
		) values (
			team_invite_seq.nextval,
			#{team_id},
			#{addressee_id},
			0
		)
	</insert>
	<select id="getInvList" parameterType="int" resultType="TeamInvite">
		select * from team_invite
		where
			addressee_id = #{id}
		order by id desc
	</select>
	<select id="getTeamName" parameterType="int" resultType="String">
		select team_name from team
		where
			id = #{tiTeamId}
	</select>
	<insert id="addTeamMember" parameterType="TeamMember">
		insert into team_member
		(
			id,
			team_id,
			member_id
		) values (
			team_member_seq.nextval,
			#{team_id},
			#{member_id}
		)
	</insert>
	<delete id="deleteInv" parameterType="TeamMember">
		delete team_invite
		where
			addressee_id = #{member_id} AND team_id = #{team_id}
	</delete>
	
	<select id="getTeamRankList" resultType="Team">
      <![CDATA[
      select *
      from
          (
              select team_id, avg(point)
              from
              (
                  select a.*, b.point
                  from team_member a
                  left outer join member b
                  on a.member_id = b.id
              )
          group by team_id
          order by avg(point)
      )
      WHERE ROWNUM <= 10
      ]]>
   </select>
	
</mapper>



